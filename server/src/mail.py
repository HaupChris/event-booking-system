import os
import smtplib

from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from typing import Dict
from dotenv import load_dotenv

from .views import Booking, FormContent


# Function to find the human-readable details based on booking, now including workshift information and formatting in German
def get_booking_details(booking: Booking, form_content: Dict) -> str:
    # Retrieve ticket option
    ticket_option = next((to for to in form_content["ticket_options"] if to["id"] == booking.ticket_id), None)
    ticket_info = f"Ticket: {ticket_option['title']} - Preis: {ticket_option['price']}€" if ticket_option else "Ticket: Nicht gefunden"

    # Retrieve beverage option
    beverage_option = next((bo for bo in form_content['beverage_options'] if bo['id'] == booking.beverage_id), None)
    beverage_info = f"Getränkeoption: {beverage_option['title']} - Preis: {beverage_option['price']}€" if beverage_option else "Getränkeoption: Nicht gefunden"

    # Retrieve food option
    food_option = next((fo for fo in form_content['food_options'] if fo['id'] == booking.food_id), None)
    food_info = f"Essensoption: {food_option['title']} - Preis: {food_option['price']}€" if food_option else "Essensoption: Nicht gefunden"

    if booking.role == "Artist":
        ticket_info = "Ticket: Kostenfrei"
        beverage_info = "Getränkeoption: Kostenfrei"
        food_info = "Essensoption: 1 Freies Essen zugeteilt"
    elif booking.role == "ArtistGuest":
        artist_reference_info = f"Mit Künstler: {booking.artist_reference}"

    # Function to find and format timeslot information
    def format_timeslot_info(timeslot_id):
        for ws in form_content['work_shifts']:
            for ts in ws['time_slots']:
                if ts['id'] == timeslot_id:
                    return f"{ws['title']}, Zeitfenster: {ts['title']}, Von: {ts['start_time']}, Bis: {ts['end_time']}"
        return "Zeitfenster: Nicht gefunden"

    # Time slots and work shifts
    timeslot_info = "Du hast folgende Prioritäten für deine Supporterschicht gewählt:\n"
    timeslot_info += "\n".join([
        f"Priorität {i + 1}: {format_timeslot_info(ts_id)}"
        for i, ts_id in
        enumerate([booking.timeslot_priority_1, booking.timeslot_priority_2, booking.timeslot_priority_3])
    ])
    timeslot_info += f"\nDu hast dicht bereit erklärt maximal {booking.amount_shifts} Schicht(en) zu übernehmen."

    # Materials
    materials_info = "Du bringst mit:\n" + "\n".join(
        [f"- {material['title']}" for material in form_content['materials'] if
         material['id'] in booking.material_ids])
    materials_info = materials_info if booking.material_ids else "Du bringst keine Materialien mit."

    # Combine all information
    details = f"{ticket_info}\n\n{beverage_info}\n\n{food_info}\n\n{timeslot_info}\n\n{materials_info}\n\nGesamtpreis: {booking.total_price}€"
    return details


# Adjusting the send_confirmation_mail function slightly to include the new get_booking_details implementation
def send_confirmation_mail(booking: Booking, form_content: Dict) -> None:
    load_dotenv()
    gmail_user = os.environ.get("GMAIL_USER")
    gmail_password = os.environ.get("GMAIL_PASS")

    # Booking details in German, as generated by your get_booking_details function
    booking_details_html = get_booking_details(booking, form_content).replace('\n', '<br>')
    booking_ticket = next((to for to in form_content["ticket_options"] if to["id"] == booking.ticket_id), None)
    booking_ticket_title = booking_ticket['title'] if booking_ticket else "Ticket nicht gefunden"
    beverage_option = next((bo for bo in form_content['beverage_options'] if bo['id'] == booking.beverage_id), None)
    beverage_option_title = beverage_option['title'] if beverage_option else "Getränkeoption nicht gefunden"
    food_option = next((fo for fo in form_content['food_options'] if fo['id'] == booking.food_id), None)
    food_option_title = food_option['title'] if food_option else "Essensoption nicht gefunden"

    # Prepare the HTML message
    html = f"""
    <html>
    <head>
    <style>
  body {{
    font-family: Arial, Helvetica, sans-serif; /* Standard, clean font */
  margin: 20px;
  color: #224e6b; /* Deep blue text */ 
  background-color: #e8f5ff; /* Light, watery blue background */
  }}
  .header {{
 background-color: #0093d1; /* Deeper blue for the header */
  color: #ffffff;
  padding: 20px;
  text-align: center;
  border-radius: 10px; /* Rounded edges for a softer look */
  }}
  .content {{
  margin-top: 20px;
  background-color: #a5d9f0; /* A slightly brighter blue */
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.15); /* More pronounced shadow */
  }}
  .footer {{
  margin-top: 20px;
  font-size: small;
  text-align: center;
  padding: 20px;
  color: #385a79; /* Slightly darker text for the footer */
  }}
  a {{
    color: #007bff;  /* Classic blue for links */
  }}
</style>
    </head>
    <body>
    <div class="header">
      <h1>Willkommen zum Weiher Wald & Wiesenwahn!</h1>
      <p>29.08. - 01.09.2024</p>
    </div>
    <div class="content">
        Liebe/r <strong>{booking.first_name} {booking.last_name}</strong>,<br><br>
        Wie schön, dass du bei unserem 5 jährigen Jubiläum dabei bist! Hier die Zusammenfassung für deinen Besuch:<br><br>
        {booking_details_html}<br><br>
        Falls noch nicht geschehen, sende bitte deinen Beitrag an unser Paypal: <a href="https://www.paypal.me/StephanHau">https://www.paypal.me/StephanHau</a> 
        <br>
        Betreff: <u>WW24 - {booking.first_name}, {booking.last_name} - {booking_ticket_title} - {beverage_option_title} - {food_option_title}</u>
        <br><br>      
        Alle weiteren Informationen teilen wir dir rechtzeitig in der Whatsapp Gruppe mit.
        <br><br>
        Bis bald in Poppenwind!
        <br><br>
        &#127881; Dein Wiesenwahn Team &#127882;
    </div>
    </body>
    </html>
    """

    msg = MIMEMultipart('alternative')
    msg['From'] = gmail_user
    msg['To'] = booking.email
    msg['Subject'] = '5 Jahre Wiesenwahn - Du bist dabei!'

    # Attach the HTML message
    msg.attach(MIMEText(html, 'html'))

    # # save the email to a file
    # with open("email.html", "w") as file:
    #     file.write(html)

    try:
        server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
        server.ehlo()
        server.login(gmail_user, gmail_password)
        server.sendmail(gmail_user, booking.email, msg.as_string())
        server.close()
        print("Email erfolgreich gesendet!")
    except Exception as e:
        print(f"Fehler beim Senden der E-Mail: {e}")

# Note: Replace 'your_email@gmail.com' and 'your_app_password' with your actual details.
